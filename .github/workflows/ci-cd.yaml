name: Performance Test
# https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions

on:
  pull_request:
    branches-ignore:
      - 'mona/octocat'
    paths:
      - './gitops/docker/php/'      

  push:
    branches:
      - main
      - 'releases/**'

    paths-ignore:
      - 'docs/**'  
      - '!sub-project/docs/**' # the !sub-project/docs/** pattern is used to exclude the sub-project/docs directory from the paths-ignore filter.  
    tags:
      - v2
      - v1.*      

  issues:
    types: [opened, edited]
      #- opened
    
  label:
    types:
      - created

  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '30 5,17 * * *'      

  workflow_call:
    inputs:
      username:
        description: 'A username passed from the caller workflow'
        default: 'john-doe'
        required: false
        type: string

jobs: 

  manual_test_pipe:
    runs-on: ubuntu-latest

    steps:
      - name: Print the input name to STDOUT
        run: echo The username is ${{ inputs.username }}

  schedule_test_pipe:
    runs-on: ubuntu-latest
    steps:
      - name: Not on Monday or Wednesday
        if: github.event.schedule != '30 5 * * 1,3'
        run: echo "This job runs every day at 5:30 UTC except Monday and Wednesday."
      - name: Every time
        run: echo "This step will always run"

  unit_tests_api:
    runs-on: ubuntu-latest
    needs: [manual_test_pipe, schedule_test_pipe]
    strategy:
      matrix:
        node-version: [20.x, 22.x, 23.x] 

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Node.js dependencies
        run: yarn install

      - name: Run tests
        run: yarn test

  lint_tests_api:
    runs-on: ubuntu-latest
    needs: [manual_test_pipe, schedule_test_pipe]
    strategy:
      matrix:
        node-version: [20.x, 22.x, 23.x] 

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Node.js dependencies
        run: yarn install

      - name: Run tests
        run: yarn lint        

  security_test_api_code:
    runs-on: ubuntu-latest
    needs: [lint_tests_api,unit_tests_api]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: nodejsscan scan
        id: njsscan
        uses: ajinabraham/njsscan-action@master
        with:
          args: '. --sarif --output results.sarif || true'

      - name: Upload njsscan report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif


  security_test_api_container:
    runs-on: ubuntu-latest
    needs: [lint_tests_api,unit_tests_api]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build images 
        run: |
          docker build -t devinfrabr/api-item:${{ github.sha }} .
   
      - name: Security scan
        uses: docker://aquasec/trivy:0.19.2
        with:
          args: --exit-code 1 --severity HIGH,CRITICAL devinfrabr/api-item:${{ github.sha }}
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          #severity: 'CRITICAL,HIGH'
        continue-on-error: true 

  container_build_push_api:
    name: Build container image
    runs-on: ubuntu-latest
    needs: [security_test_api_container,security_test_api_code]
    outputs:
      tag: ${{ steps.metasha.outputs.tags }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker meta latest
        id: metalatest
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ github.actor }}/api-item
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Docker meta sha
        id: metasha
        uses: docker/metadata-action@v5
        with:
          images: |
            devinfrabr/api-item
          tags: |
            type=sha,{{sha}},format=short

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image main
        uses: docker/build-push-action@v5
        id: docker_build_sha
        with:
          context: .
          file: Dockerfile 
          platforms: linux/amd64,linux/arm64
          push: true
          labels: ${{ steps.metasha.outputs.labels }}
          tags: |
            ${{ steps.metasha.outputs.tags }}